# -*- coding: utf-8 -*-
"""CONTACT BOOK

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yokgf3LdjTAad4QhNob7kOKlQYqlc65d

Contact Information: Store name, phone number, email, and address for each contact.
Add Contact: Allow users to add new contacts with their details.
View Contact List: Display a list of all saved contacts with names and phone numbers.
Search Contact: Implement a search function to find contacts by name or phone number.
Update Contact: Enable users to update contact details.
Delete Contact: Provide an option to delete a contact.
User Interface: Design a user-friendly interface for easy interaction
"""

contacts = []  # List to store contact dictionaries

def show_menu():
    print("Contact Book")
    print("1. Add Contact")
    print("2. View Contact List")
    print("3. Search Contact")
    print("4. Update Contact")
    print("5. Delete Contact")
    print("6. Exit")

def add_contact():
    name = input("Enter name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email: ")
    address = input("Enter address: ")
    contact = {"name": name, "phone": phone, "email": email, "address": address}
    contacts.append(contact)
    print("Contact added successfully!")

def view_contacts():
    if not contacts:
        print("No contacts found.")
    else:
        for contact in contacts:
            print(f"Name: {contact['name']}, Phone: {contact['phone']}")

def search_contact():
    search_term = input("Enter name or phone number to search: ")
    matching_contacts = [contact for contact in contacts if search_term.lower() in contact['name'].lower() or search_term in contact['phone']]
    if not matching_contacts:
        print("No matching contacts found.")
    else:
        for contact in matching_contacts:
            print(f"Name: {contact['name']}, Phone: {contact['phone']}, Email: {contact['email']}, Address: {contact['address']}")

def update_contact():
    search_term = input("Enter name or phone number of the contact to update: ")
    matching_contacts = [contact for contact in contacts if search_term.lower() in contact['name'].lower() or search_term in contact['phone']]
    if not matching_contacts:
        print("No matching contacts found.")
    else:
        for i, contact in enumerate(matching_contacts, start=1):
            print(f"{i}. Name: {contact['name']}, Phone: {contact['phone']}")
        choice = int(input("Enter the number of the contact to update: "))
        if 1 <= choice <= len(matching_contacts):
            update_contact = matching_contacts[choice - 1]
            name = input("Enter new name (leave blank to keep current): ") or update_contact['name']
            phone = input("Enter new phone number (leave blank to keep current): ") or update_contact['phone']
            email = input("Enter new email (leave blank to keep current): ") or update_contact['email']
            address = input("Enter new address (leave blank to keep current): ") or update_contact['address']
            update_contact.update({"name": name, "phone": phone, "email": email, "address": address})
            print("Contact updated successfully!")
        else:
            print("Invalid choice.")

def delete_contact():
    search_term = input("Enter name or phone number of the contact to delete: ")
    matching_contacts = [contact for contact in contacts if search_term.lower() in contact['name'].lower() or search_term in contact['phone']]
    if not matching_contacts:
        print("No matching contacts found.")
    else:
        for i, contact in enumerate(matching_contacts, start=1):
            print(f"{i}. Name: {contact['name']}, Phone: {contact['phone']}")
        choice = int(input("Enter the number of the contact to delete: "))
        if 1 <= choice <= len(matching_contacts):
            contacts.remove(matching_contacts[choice - 1])
            print("Contact deleted successfully!")
        else:
            print("Invalid choice.")

while True:
    show_menu()
    choice = input("Enter your choice (1-6): ")

    if choice == "1":
        add_contact()
    elif choice == "2":
        view_contacts()
    elif choice == "3":
        search_contact()
    elif choice == "4":
        update_contact()
    elif choice == "5":
        delete_contact()
    elif choice == "6":
        print("Exiting the application...")
        break
    else:
        print("Invalid choice. Please try again.")