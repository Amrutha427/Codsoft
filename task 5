{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dhuwU3xw7WTh","outputId":"e66a1256-8154-499c-807b-6bab77fec86a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Contact Book\n","1. Add Contact\n","2. View Contact List\n","3. Search Contact\n","4. Update Contact\n","5. Delete Contact\n","6. Exit\n","Enter name: 1\n"]}],"source":["\n","\n","\n","\n","\n","contacts = []  # List to store contact dictionaries\n","\n","def show_menu():\n","    print(\"Contact Book\")\n","    print(\"1. Add Contact\")\n","    print(\"2. View Contact List\")\n","    print(\"3. Search Contact\")\n","    print(\"4. Update Contact\")\n","    print(\"5. Delete Contact\")\n","    print(\"6. Exit\")\n","\n","def add_contact():\n","    name = input(\"Enter name: \")\n","    phone = input(\"Enter phone number: \")\n","    email = input(\"Enter email: \")\n","    address = input(\"Enter address: \")\n","    contact = {\"name\": name, \"phone\": phone, \"email\": email, \"address\": address}\n","    contacts.append(contact)\n","    print(\"Contact added successfully!\")\n","\n","def view_contacts():\n","    if not contacts:\n","        print(\"No contacts found.\")\n","    else:\n","        for contact in contacts:\n","            print(f\"Name: {contact['name']}, Phone: {contact['phone']}\")\n","\n","def search_contact():\n","    search_term = input(\"Enter name or phone number to search: \")\n","    matching_contacts = [contact for contact in contacts if search_term.lower() in contact['name'].lower() or search_term in contact['phone']]\n","    if not matching_contacts:\n","        print(\"No matching contacts found.\")\n","    else:\n","        for contact in matching_contacts:\n","            print(f\"Name: {contact['name']}, Phone: {contact['phone']}, Email: {contact['email']}, Address: {contact['address']}\")\n","\n","def update_contact():\n","    search_term = input(\"Enter name or phone number of the contact to update: \")\n","    matching_contacts = [contact for contact in contacts if search_term.lower() in contact['name'].lower() or search_term in contact['phone']]\n","    if not matching_contacts:\n","        print(\"No matching contacts found.\")\n","    else:\n","        for i, contact in enumerate(matching_contacts, start=1):\n","            print(f\"{i}. Name: {contact['name']}, Phone: {contact['phone']}\")\n","        choice = int(input(\"Enter the number of the contact to update: \"))\n","        if 1 <= choice <= len(matching_contacts):\n","            update_contact = matching_contacts[choice - 1]\n","            name = input(\"Enter new name (leave blank to keep current): \") or update_contact['name']\n","            phone = input(\"Enter new phone number (leave blank to keep current): \") or update_contact['phone']\n","            email = input(\"Enter new email (leave blank to keep current): \") or update_contact['email']\n","            address = input(\"Enter new address (leave blank to keep current): \") or update_contact['address']\n","            update_contact.update({\"name\": name, \"phone\": phone, \"email\": email, \"address\": address})\n","            print(\"Contact updated successfully!\")\n","        else:\n","            print(\"Invalid choice.\")\n","\n","def delete_contact():\n","    search_term = input(\"Enter name or phone number of the contact to delete: \")\n","    matching_contacts = [contact for contact in contacts if search_term.lower() in contact['name'].lower() or search_term in contact['phone']]\n","    if not matching_contacts:\n","        print(\"No matching contacts found.\")\n","    else:\n","        for i, contact in enumerate(matching_contacts, start=1):\n","            print(f\"{i}. Name: {contact['name']}, Phone: {contact['phone']}\")\n","        choice = int(input(\"Enter the number of the contact to delete: \"))\n","        if 1 <= choice <= len(matching_contacts):\n","            contacts.remove(matching_contacts[choice - 1])\n","            print(\"Contact deleted successfully!\")\n","        else:\n","            print(\"Invalid choice.\")\n","\n","while True:\n","    show_menu()\n","    choice = input(\"Enter your choice (1-6): \")\n","\n","    if choice == \"1\":\n","        add_contact()\n","    elif choice == \"2\":\n","        view_contacts()\n","    elif choice == \"3\":\n","        search_contact()\n","    elif choice == \"4\":\n","        update_contact()\n","    elif choice == \"5\":\n","        delete_contact()\n","    elif choice == \"6\":\n","        print(\"Exiting the application...\")\n","        break\n","    else:\n","        print(\"Invalid choice. Please try again.\")"]},{"cell_type":"markdown","metadata":{"id":"zeMmNINFDKMH"},"source":["\n","\n","\n","\n","CONTACT LIST: TASK 5\n","\n"," Contact Information: Store name, phone number, email, and address for each contact. Add Contact: Allow users to add new contacts with their details. View Contact List: Display a list of all saved contacts with names and phone numbers. Search Contact: Implement a search function to find contacts by name or phone number. Update Contact: Enable users to update contact details. Delete Contact: Provide an option to delete a contact. User Interface: Design a user-friendly interface for easy interaction"]}],"metadata":{"colab":{"provenance":[{"file_id":"1TWLJ1a7Cm-EVUyD1Qb_A0edifxY1UhQW","timestamp":1719260042923}],"authorship_tag":"ABX9TyPF1Fn+arhRdiLLNqlJdxWk"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}